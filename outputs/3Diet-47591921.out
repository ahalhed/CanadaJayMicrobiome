Unloading StdEnv/2020

The following have been reloaded with a version change:
  1) gcccore/.9.3.0 => gcccore/.7.3.0     2) imkl/2020.1.217 => imkl/2018.3.222

Loading required package: permute
Loading required package: lattice
This is vegan 2.5-7
Loading required package: carData

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.3     ✔ purrr   0.3.4
✔ tibble  3.0.5     ✔ dplyr   1.0.2
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ lubridate::date()        masks base::date()
✖ dplyr::filter()          masks stats::filter()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ dplyr::recode()          masks car::recode()
✖ lubridate::setdiff()     masks base::setdiff()
✖ purrr::some()            masks car::some()
✖ lubridate::union()       masks base::union()
[1] "Prediction 3A - Weather data for freeze thaw"

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double(),
  `Dir of Max Gust Flag` = col_logical(),
  `Spd of Max Gust Flag` = col_logical()
)
ℹ Use `spec()` for the full column specifications.

Joining, by = "CollectionDate"
[1] "Prediction 3A - FT number of microbiota"
Joining, by = "sampleID"
`geom_smooth()` using formula 'y ~ x'
null device 
          1 

Call:
lm(formula = n ~ FreezeThaw * BreedingStatus, data = plot3A)

Coefficients:
                         (Intercept)                            FreezeThaw  
                              16.602                                 2.775  
           BreedingStatusNon-breeder  FreezeThaw:BreedingStatusNon-breeder  
                              16.330                                -3.096  


Call:
lm(formula = n ~ FreezeThaw * BreedingStatus, data = plot3A)

Residuals:
    Min      1Q  Median      3Q     Max 
-42.677 -18.226 -12.047   3.094 170.098 

Coefficients:
                                     Estimate Std. Error t value Pr(>|t|)
(Intercept)                            16.602     51.491   0.322    0.749
FreezeThaw                              2.775      4.609   0.602    0.551
BreedingStatusNon-breeder              16.330     67.879   0.241    0.811
FreezeThaw:BreedingStatusNon-breeder   -3.096      6.491  -0.477    0.636

Residual standard error: 39.9 on 35 degrees of freedom
Multiple R-squared:  0.0542,	Adjusted R-squared:  -0.02687 
F-statistic: 0.6686 on 3 and 35 DF,  p-value: 0.577

Analysis of Variance Table

Response: n
                          Df Sum Sq Mean Sq F value Pr(>F)
FreezeThaw                 1    942  942.16  0.5918 0.4469
BreedingStatus             1   1889 1888.99  1.1865 0.2835
FreezeThaw:BreedingStatus  1    362  362.12  0.2275 0.6364
Residuals                 35  55721 1592.02               
[1] "Prediction 3C - Food supplementation (OTUs)"
null device 
          1 
[1] "two sample t-test"
[1] "H0 - Means are not different (u1-u2=D0)"
[1] "HA - yes FS mean is less than no FS mean (u1-u2>D0)"
[1] "all samples"

	F test to compare two variances

data:  yes$n and no$n
F = 0.75653, num df = 4, denom df = 16, p-value = 0.8632
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.202856 6.530844
sample estimates:
ratio of variances 
         0.7565344 

[1] "summary of yes"
       n       
 Min.   : 9.0  
 1st Qu.:12.0  
 Median :23.0  
 Mean   :23.6  
 3rd Qu.:23.0  
 Max.   :51.0  
[1] "summary of no"
       n        
 Min.   : 3.00  
 1st Qu.: 9.00  
 Median :20.00  
 Mean   :24.12  
 3rd Qu.:28.00  
 Max.   :66.00  

	Welch Two Sample t-test

data:  yes and no
t = -0.059251, df = 7.4338, p-value = 0.4772
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
    -Inf 15.8902
sample estimates:
mean of x mean of y 
 23.60000  24.11765 

[1] "2017 only"

	F test to compare two variances

data:  yes$n and no$n
F = 0.12836, num df = 2, denom df = 7, p-value = 0.2369
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.01962247 5.05166396
sample estimates:
ratio of variances 
         0.1283608 


	Welch Two Sample t-test

data:  yes and no
t = -1.6818, df = 8.9444, p-value = 0.06356
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
     -Inf 1.410575
sample estimates:
mean of x mean of y 
 18.33333  33.87500 

[1] "2018 only"

	F test to compare two variances

data:  yes$n and no$n
F = 7.5091, num df = 1, denom df = 8, p-value = 0.05088
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
    0.991833 7183.580364
sample estimates:
ratio of variances 
          7.509051 


	Welch Two Sample t-test

data:  yes and no
t = 0.81144, df = 1.0599, p-value = 0.7201
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
     -Inf 129.6559
sample estimates:
mean of x mean of y 
 31.50000  15.44444 

