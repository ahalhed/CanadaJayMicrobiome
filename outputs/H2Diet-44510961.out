
Lmod is automatically replacing "intel/2016.4" with "gcc/7.3.0".

-------------------------------------------------------------------------------
The following dependent module(s) are not currently loaded: gcccore/.5.4.0 (required by: icc/.2016.4.258, ifort/.2016.4.258)
-------------------------------------------------------------------------------

Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/2.1.1

The following have been reloaded with a version change:
  1) gcccore/.5.4.0 => gcccore/.7.3.0     2) imkl/11.3.4.258 => imkl/2018.3.222

Loading required package: permute
Loading required package: lattice
This is vegan 2.5-7
Loading required package: carData

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.3     ✔ purrr   0.3.4
✔ tibble  3.0.5     ✔ dplyr   1.0.2
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ lubridate::date()        masks base::date()
✖ dplyr::filter()          masks stats::filter()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ dplyr::recode()          masks car::recode()
✖ lubridate::setdiff()     masks base::setdiff()
✖ purrr::some()            masks car::some()
✖ lubridate::union()       masks base::union()
[1] "Prediction 2A - Freeze thaw"

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double(),
  `Dir of Max Gust Flag` = col_logical(),
  `Spd of Max Gust Flag` = col_logical()
)
ℹ Use `spec()` for the full column specifications.

Joining, by = "CollectionDate"
Permutation test for adonis under reduced model
Terms added sequentially (first to last)
Permutation: free
Number of permutations: 999

adonis2(formula = dmAitchison ~ FreezeThaw + SeasonType + Group, data = metaWeather, na.action = na.exclude)
           Df SumOfSqs      R2      F Pr(>F)    
FreezeThaw  1    8.810 0.03317 2.9165  0.040 *  
SeasonType  2    0.930 0.00350 0.1539  0.980    
Group       3   32.322 0.12169 3.5666  0.001 ***
Residual   74  223.535 0.84163                  
Total      80  265.596 1.00000                  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
[1] "Prediction 2B - Food supplementation"
Joining, by = "Sample1"
null device 
          1 
  [1] 2.4644755 2.2117686 3.5751298 1.7397219 1.6961289 1.8393448 3.3996104
  [8] 2.5128877 2.2841582 2.5566535 1.9055904 1.9972356 2.0431865 2.5393490
 [15] 1.9598066 2.0531460 0.6873969 1.8629150 1.6357822 2.9719694 1.0797092
 [22] 1.6569070 1.4498182 2.8250232 2.4379181 2.2112789 1.1754483 1.5919611
 [29] 1.8469206 1.3806145 1.1728496 1.8809994 2.2292983 1.2870760 2.5932246
 [36] 1.8460682 1.9905571 1.2716176 0.9932296 1.5725506 2.1316917 0.7843083
 [43] 1.6765621 2.0621634 1.8828997 2.6025024 3.5491683 2.0274101 2.8831970
 [50] 1.5347448 2.2615913 2.2697087 1.1883538 2.1176957 3.3986429 2.7995936
 [57] 1.5548639 3.2494822 2.7288536 0.7477981 2.4133907 1.6674647 2.4585267
 [64] 2.4724307 3.2640867 2.0319360 2.6354901 2.0763873 3.2638447 2.0458003
 [71] 2.4357566 2.0895925 1.2242738 1.4734799 0.1478977 0.8652668 1.6660121
 [78] 1.7151118 1.8033133 1.5022746 1.0871133 1.7685927 2.1768184 1.3734407
 [85] 1.4042650 1.9551999 1.2712480 1.9083354 0.6189301 1.2695100 0.8048665
 [92] 2.4597626 2.5104158 1.1518501 1.1689621 2.6104770 0.4791002 1.8586856
 [99] 1.3428602 2.4676123 1.4548137 3.6785279 3.3218079 3.1324027 2.9406881
[106] 3.1290305 2.3699756 4.0349830 2.9804831 1.7549245 2.7759658 3.4729898
[113] 2.4277931 4.5141973 1.9349919 3.7008026 3.0030108 1.2945086 2.3166361
[120] 1.0812631 1.7044748 0.9662381 3.1560753 2.6676638 1.5569468 2.1492123
[127] 1.0759309 3.8285236 2.9060365 1.4150914 1.1192833 2.3308010 2.5976394
[134] 2.5280002 1.9601611 1.5925315 1.3502257 0.5487774 0.4518698 1.9331014
[141] 2.0566569 0.4201576 1.6863135 0.9478794 3.0644104 1.2344348 1.7546812
[148] 0.8975790 1.6533972 2.1314303 1.5428498 2.4175108 2.0148907 0.6791557
[155] 1.4805940 0.5473207 1.3219594 1.8283903 1.2133577 0.5609111 2.1030117
[162] 1.3759856 3.1369862 1.7642611 0.9141565 1.6531046 1.4338018 1.7046906
[169] 2.2629129 1.5953844 2.1196952 1.8235661 1.9307895 1.1675047 0.9807659
[176] 0.4997553 2.0449836 2.5168343 0.8824787 1.0990406 0.5732965 2.6426623
[183] 1.2820038 0.6222716 1.3086751 2.1833045 0.3104479 2.0293704 1.6226087
[190] 2.0397044 3.4153654 1.6506761 1.8781438 1.5285962 1.6636198 1.4852209
[197] 3.1834845 1.9572371 1.5505196 2.8283811 1.6876041 4.3153385 1.0231471
[204] 1.4401219 1.5025220 1.8325839 2.6632535 2.0149103 0.2182650 2.9252289
[211] 2.3410884 3.4273073 2.8837256 3.3108229 3.6303360 1.8672305 3.0163304
[218] 1.4348591 2.2481176 0.9878465 2.0309174 1.5695506 2.8581161 2.6585289
[225] 3.3176464 3.0430583 1.8579919 1.6784232 2.2423932 2.8147393 0.2742400
[232] 2.4255632 3.0117323 3.3728243 0.7566343 1.8437391 0.8326863 2.3945279
[239] 3.5840411 3.0109670 2.8559186 2.2046485 0.8652558 0.9301821 3.4229392
[246] 1.3157272 3.0790210 3.5636092 2.8794972 0.4886826 2.2940169 2.5248478
[253] 3.4408392
 [1] 1.856547 0.918329 2.224011 2.005811 3.244092 1.649292 1.990603 2.521893
 [9] 2.906158 3.466911
[1] "2b Mann-Whitney"

	Wilcoxon rank sum test with continuity correction

data:  dm_meta[dm_meta$group == "No", ] %>% .$AitchisonDistance and dm_meta[dm_meta$group == "Yes", ] %>% .$AitchisonDistance
W = 1004, p-value = 0.2695
alternative hypothesis: true location shift is not equal to 0

[1] "2b t-test"

	Welch Two Sample t-test

data:  dm_meta[dm_meta$group == "No", ] %>% .$AitchisonDistance and dm_meta[dm_meta$group == "Yes", ] %>% .$AitchisonDistance
t = -1.1367, df = 9.8943, p-value = 0.2824
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.8433934  0.2741160
sample estimates:
mean of x mean of y 
 1.993726  2.278365 

Joining, by = "SampleID"
Too few points to calculate an ellipse
Warning message:
Removed 1 row(s) containing missing values (geom_path). 
null device 
          1 
