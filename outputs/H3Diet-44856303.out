
Lmod is automatically replacing "intel/2016.4" with "gcc/7.3.0".

-------------------------------------------------------------------------------
The following dependent module(s) are not currently loaded: gcccore/.5.4.0 (required by: icc/.2016.4.258, ifort/.2016.4.258)
-------------------------------------------------------------------------------

Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/2.1.1

The following have been reloaded with a version change:
  1) gcccore/.5.4.0 => gcccore/.7.3.0     2) imkl/11.3.4.258 => imkl/2018.3.222

Loading required package: permute
Loading required package: lattice
This is vegan 2.5-7
Loading required package: carData

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.3     ✔ purrr   0.3.4
✔ tibble  3.0.5     ✔ dplyr   1.0.2
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ lubridate::date()        masks base::date()
✖ dplyr::filter()          masks stats::filter()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ dplyr::recode()          masks car::recode()
✖ lubridate::setdiff()     masks base::setdiff()
✖ purrr::some()            masks car::some()
✖ lubridate::union()       masks base::union()
[1] "Prediction 3A + B - Data for freeze thaw"

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double(),
  `Dir of Max Gust Flag` = col_logical(),
  `Spd of Max Gust Flag` = col_logical()
)
ℹ Use `spec()` for the full column specifications.

[1] "Prediction 3A - Freeze thaw variation"
Joining, by = "CollectionDate"
Joining, by = "Sample1"
null device 
          1 
Permutation test for adonis under reduced model
Terms added sequentially (first to last)
Permutation: free
Number of permutations: 999

adonis2(formula = dmAitchison ~ FreezeThaw + SeasonType + Group, data = metaWeather, na.action = na.exclude)
           Df SumOfSqs      R2      F Pr(>F)
FreezeThaw  1    5.868 0.04955 1.9460  0.130
SeasonType  2    1.866 0.01575 0.3094  0.906
Group       1    8.168 0.06897 2.7089  0.105
Residual   34  102.517 0.86572              
Total      38  118.417 1.00000              
[1] "Prediction 3B - Shared OTUs"
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "combos"
Joining, by = c("Sample1", "Sample2")
null device 
          1 
[1] "Prediction 3C + D - Data for Supplementation"
[1] "Prediction 3C - Food supplementation"
Joining, by = "Sample1"
null device 
          1 
  [1] 2.0197063 2.0329124 1.9087931 1.9282665 3.1785588 1.0589977 1.5963210
  [8] 1.8317345 1.6167091 1.8825143 1.6477183 0.8979811 1.6511425 1.8445857
 [15] 1.7135303 2.7326353 1.3699582 1.9898591 3.1378465 1.5510183 0.6593624
 [22] 2.4504228 1.6756872 2.4603046 2.1364356 2.2743171 2.2809085 1.1478715
 [29] 1.6606486 0.1634556 0.7892283 1.4344172 1.7385495 1.7456863 1.5238103
 [36] 1.8666885 0.5531075 1.2551372 1.1538683 2.3941699 2.4766009 1.2969047
 [43] 1.8652264 2.7871969 3.3012832 2.7966335 2.9694819 3.2845255 2.7392462
 [50] 3.8304098 3.0997764 2.7039638 4.4715095 4.1301115 2.1777660 1.5297511
 [57] 1.4724873 0.8426558 2.7587315 2.6727045 1.3752469 1.2105217 3.8054512
 [64] 1.0754634 2.4330869 1.3757447 1.5910264 0.3800238 0.5284175 1.6113931
 [71] 1.9646912 0.2625839 1.1744920 3.1367262 1.1540821 1.6592555 1.6152628
 [78] 0.6097351 1.6216605 0.4520819 1.3026377 1.4460634 1.2437801 0.5578151
 [85] 1.4249605 3.0444215 1.7236796 0.7866924 1.8425169 1.7631666 1.7930259
 [92] 1.2983194 0.8270871 0.5534957 1.8591073 2.4320289 0.8185562 0.7678460
 [99] 2.7560734 1.1351578 0.6333376 1.2051958 1.9371182 2.1438610 1.8400046
[106] 1.7452537 1.6217438 1.4742556 2.9420697 2.1392972 1.5413547 1.6661796
[113] 4.2535376 0.9521071 1.4572479 1.6362907 1.7338378 0.2220516 2.4695131
[120] 1.8249401 3.2214896 1.6355328 2.1412102 1.1067303 2.0262084 1.6077172
[127] 2.8784980 3.8275827 2.7965437 1.7819588 1.6704917 2.2859205 2.7805229
[134] 2.9249634 0.6892957 2.5862776
[1] 2.167612 3.337601 1.688402 3.049140 3.183637 3.170959
[1] "Mann-Whitney"

	Wilcoxon rank sum test with continuity correction

data:  dm_meta[dm_meta$group == "No", ] %>% .$AitchisonDistance and dm_meta[dm_meta$group == "Yes", ] %>% .$AitchisonDistance
W = 148, p-value = 0.008499
alternative hypothesis: true location shift is not equal to 0

[1] "t-test"

	Welch Two Sample t-test

data:  dm_meta[dm_meta$group == "No", ] %>% .$AitchisonDistance and dm_meta[dm_meta$group == "Yes", ] %>% .$AitchisonDistance
t = -3.2075, df = 5.7708, p-value = 0.01945
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -1.6170833 -0.2098475
sample estimates:
mean of x mean of y 
 1.852760  2.766225 

