
Lmod is automatically replacing "intel/2016.4" with "gcc/7.3.0".

-------------------------------------------------------------------------------
The following dependent module(s) are not currently loaded: gcccore/.5.4.0 (required by: icc/.2016.4.258, ifort/.2016.4.258)
-------------------------------------------------------------------------------

Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/2.1.1

The following have been reloaded with a version change:
  1) gcccore/.5.4.0 => gcccore/.7.3.0     2) imkl/11.3.4.258 => imkl/2018.3.222

Loading required package: permute
Loading required package: lattice
This is vegan 2.5-7
Loading required package: carData

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.3     ✔ purrr   0.3.4
✔ tibble  3.0.5     ✔ dplyr   1.0.2
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ lubridate::date()        masks base::date()
✖ dplyr::filter()          masks stats::filter()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ dplyr::recode()          masks car::recode()
✖ lubridate::setdiff()     masks base::setdiff()
✖ purrr::some()            masks car::some()
✖ lubridate::union()       masks base::union()
[1] "Prediction 3A + B - Weather data for freeze thaw"

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  `Station Name` = col_character(),
  `Date/Time` = col_date(format = ""),
  Month = col_character(),
  Day = col_character(),
  `Data Quality` = col_logical(),
  `Max Temp Flag` = col_character(),
  `Min Temp Flag` = col_character(),
  `Mean Temp Flag` = col_character(),
  `Heat Deg Days Flag` = col_character(),
  `Cool Deg Days Flag` = col_character(),
  `Total Rain (mm)` = col_logical(),
  `Total Rain Flag` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Snow Flag` = col_logical(),
  `Total Precip Flag` = col_character(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust Flag` = col_character(),
  `Spd of Max Gust Flag` = col_character()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double()
)
ℹ Use `spec()` for the full column specifications.


── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  `Longitude (x)` = col_double(),
  `Latitude (y)` = col_double(),
  `Climate ID` = col_double(),
  `Date/Time` = col_date(format = ""),
  Year = col_double(),
  `Data Quality` = col_logical(),
  `Max Temp (°C)` = col_double(),
  `Min Temp (°C)` = col_double(),
  `Mean Temp (°C)` = col_double(),
  `Heat Deg Days (°C)` = col_double(),
  `Cool Deg Days (°C)` = col_double(),
  `Total Rain (mm)` = col_logical(),
  `Total Snow (cm)` = col_logical(),
  `Total Precip (mm)` = col_double(),
  `Snow on Grnd (cm)` = col_double(),
  `Snow on Grnd Flag` = col_logical(),
  `Dir of Max Gust (10s deg)` = col_double(),
  `Dir of Max Gust Flag` = col_logical(),
  `Spd of Max Gust Flag` = col_logical()
)
ℹ Use `spec()` for the full column specifications.

Joining, by = "CollectionDate"
[1] "Prediction 3A - Freeze thaw variation"
Joining, by = "Sample1"
null device 
          1 
Joining, by = "sampleID"
[1] "All samples"

Call:
anosim(x = dmAitchison, grouping = FreezeThaw) 
Dissimilarity: user supplied square matrix 

ANOSIM statistic R: 0.2042 
      Significance: 0.028 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.137 0.174 0.206 0.247 

Dissimilarity ranks between and within classes:
         0%    25%   50%    75% 100%   N
Between   3 159.50 296.0 447.50  561 415
8        64  64.00  64.0  64.00   64   1
9         1  85.00 214.0 354.00  525 105
10       NA     NA    NA     NA   NA   0
11      246 261.00 291.0 340.50  443   6
12       57 212.75 363.5 476.00  536   6
13        2 166.50 268.5 400.75  468  28

[1] "Breeders only"

Call:
anosim(x = dmSamp, grouping = FreezeThaw) 
Dissimilarity: 

ANOSIM statistic R: 0.2749 
      Significance: 0.06 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.229 0.285 0.345 0.431 

Dissimilarity ranks between and within classes:
        0%   25%  50%   75% 100%  N
Between  1 20.00 39.0 53.00   66 49
8        8  8.00  8.0  8.00    8  1
10      NA    NA   NA    NA   NA  0
12       7 19.75 29.5 46.75   63  6
13      10 15.50 27.5 32.50   41 10

[1] "Non-Breeders only"

Call:
anosim(x = dmSamp, grouping = FreezeThaw) 
Dissimilarity: 

ANOSIM statistic R: 0.09687 
      Significance: 0.237 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.191 0.253 0.297 0.353 

Dissimilarity ranks between and within classes:
         0%    25% 50%    75% 100%   N
Between   3  75.00 128 176.00  231 117
9         1  45.00  96 170.00  230 105
11      115 120.75 137 162.25  215   6
13      105 113.00 121 170.00  219   3

[1] "Prediction 3B - FT number of microbiota"
null device 
          1 

Call:
lm(formula = n ~ FreezeThaw + BreedingStatus, data = plot3B)

Coefficients:
              (Intercept)                 FreezeThaw  
                 28.41072                    0.09591  
BreedingStatusNon-breeder  
                 -2.95605  


Call:
lm(formula = n ~ FreezeThaw + BreedingStatus, data = plot3B)

Residuals:
    Min      1Q  Median      3Q     Max 
-19.658  -9.701  -8.318   1.299  95.682 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)
(Intercept)               28.41072   26.65752   1.066    0.292
FreezeThaw                 0.09591    2.07596   0.046    0.963
BreedingStatusNon-breeder -2.95605    8.97534  -0.329    0.743

Residual standard error: 21.9 on 46 degrees of freedom
Multiple R-squared:  0.003644,	Adjusted R-squared:  -0.03968 
F-statistic: 0.08411 on 2 and 46 DF,  p-value: 0.9195

Analysis of Variance Table

Response: n
               Df  Sum Sq Mean Sq F value Pr(>F)
FreezeThaw      1    28.7   28.67  0.0598 0.8080
BreedingStatus  1    52.0   52.04  0.1085 0.7434
Residuals      46 22069.0  479.76               
[1] "Prediction 3C + D - Data for Supplementation"
[1] "Prediction 3C - Food supplementation (OTUs)"
null device 
          1 
[1] "one sample t-test"
[1] "H0 - Means are not different (u=0)"
[1] "HA - yes FS mean is less than no FS mean (u>u0)"
[1] "all samples"
[1] "test statistic"
[1] "summary of yes"
       n       
 Min.   : 9.0  
 1st Qu.:12.0  
 Median :23.0  
 Mean   :23.6  
 3rd Qu.:23.0  
 Max.   :51.0  
[1] "summary of no"
       n        
 Min.   : 3.00  
 1st Qu.: 9.00  
 Median :20.00  
 Mean   :24.12  
 3rd Qu.:28.00  
 Max.   :66.00  
[1] "p-value"
[1] 0.4738422

	One Sample t-test

data:  yes
t = -0.069825, df = 4, p-value = 0.4738
alternative hypothesis: true mean is less than 24.11765
95 percent confidence interval:
     -Inf 39.40445
sample estimates:
mean of x 
     23.6 

[1] "2017 only"

	One Sample t-test

data:  yes
t = -3.3304, df = 2, p-value = 0.03978
alternative hypothesis: true mean is less than 33.875
95 percent confidence interval:
     -Inf 31.95993
sample estimates:
mean of x 
 18.33333 

[1] "2018 only"

	One Sample t-test

data:  yes
t = 0.82336, df = 1, p-value = 0.7193
alternative hypothesis: true mean is less than 15.44444
95 percent confidence interval:
     -Inf 154.6182
sample estimates:
mean of x 
     31.5 

[1] "Prediction 3D - Food supplementation (distances)"
Joining, by = "Sample1"
null device 
          1 
[1] "Both years"

Call:
anosim(x = dmSamp, grouping = FoodSupplement) 
Dissimilarity: 

ANOSIM statistic R: 0.173 
      Significance: 0.121 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.186 0.247 0.309 0.359 

Dissimilarity ranks between and within classes:
        0%    25%   50%    75% 100%   N
Between  2  64.00 153.0 205.00  252 107
N        1  61.25 109.5 170.75  253 136
U       NA     NA    NA     NA   NA   0
Y       41 118.00 155.5 217.25  227  10

[1] "2017 Only"

Call:
anosim(x = dmSamp, grouping = FoodSupplement) 
Dissimilarity: 

ANOSIM statistic R: 0.3585 
      Significance: 0.078 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.329 0.394 0.462 0.625 

Dissimilarity ranks between and within classes:
        0% 25%  50%   75% 100%  N
Between  2  19 45.0 57.50   66 35
N        1  17 27.5 35.25   49 28
U       NA  NA   NA    NA   NA  0
Y       15  26 37.0 46.00   55  3

[1] "2018 Only"

Call:
anosim(x = dmSamp, grouping = FoodSupplement) 
Dissimilarity: 

ANOSIM statistic R: 0.2042 
      Significance: 0.324 

Permutation: free
Number of permutations: 999

Upper quantiles of permutations (null model):
  90%   95% 97.5%   99% 
0.414 0.444 0.498 0.949 

Dissimilarity ranks between and within classes:
        0%   25%  50%  75% 100%  N
Between  2 17.25 37.0 42.5   53 18
N        1 11.50 25.5 35.5   55 36
U       NA    NA   NA   NA   NA  0
Y       48 48.00 48.0 48.0   48  1

